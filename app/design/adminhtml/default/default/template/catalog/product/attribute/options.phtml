<?php
/**
 * Magento Enterprise Edition
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Magento Enterprise Edition License
 * that is bundled with this package in the file LICENSE_EE.txt.
 * It is also available through the world-wide-web at this URL:
 * http://www.magentocommerce.com/license/enterprise-edition
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magentocommerce.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magentocommerce.com for more information.
 *
 * @category    design
 * @package     default_default
 * @copyright   Copyright (c) 2010 Magento Inc. (http://www.magentocommerce.com)
 * @license     http://www.magentocommerce.com/license/enterprise-edition
 */
?>
<?php
/**
 * Attribute otions control
 *
 * @see Mage_Adminhtml_Block_Catalog_Product_Attribute_Edit_Tab_Options
 */
?>
<div>
<ul class="messages">
	<li class="notice-msg">
	<ul>
		<li><?php echo Mage::helper('catalog')->__('If you do not specify an option value for a specific store view then the default (Admin) value will be used.') ?></li>
	</ul>
	</li>
</ul>
</div>

<div class="entity-edit">
<div class="entry-edit-head">
<h4 class="icon-head head-edit-form fieldset-legend"><?php echo Mage::helper('catalog')->__('Manage Titles (Size, Color, etc.)') ?></h4>
</div>
<div class="box">
<div class="hor-scroll">
<table class="dynamic-grid" cellspacing="0" id="attribute-labels-table">
	<tr>
                <?php foreach ($this->getStores() as $_store): ?>
                    <th><?php echo $_store->getName() ?></th>
                <?php endforeach; ?>
                </tr>
	<tr>
                    <?php $_labels = $this->getLabelValues() ?>
                    <?php foreach ($this->getStores() as $_store): ?>
                    <td><input
			class="input-text<?php if($_store->getId()==0): ?> required-option<?php endif; ?>"
			type="text" name="frontend_label[<?php echo $_store->getId() ?>]"
			value="<?php echo $this->htmlEscape($_labels[$_store->getId()]) ?>"
			<?php if ($this->getReadOnly()):?> disabled="disabled" <?php endif;?> />
		</td>
                    <?php endforeach; ?>
                </tr>
</table>
</div>
</div>
</div>
<br />
<!-- Attribute Views at Attribute sets
-->
<script>
var JSONobj = new Object;
JSONobj.arr_views=new Array();
JSONobj.arr_views_tag=new Array();

function delete_view(opt_id,type){
	$('view_attr_upd_'+type+'_'+opt_id).remove();
	 if (type=="category") {
		delete JSONobj.arr_views[opt_id];
	 } else {
		 delete JSONobj.arr_views_tag[opt_id];
	 }
	$('attribute_set_views_id').value=JSON.stringify(JSONobj);
}

function add_view(opt_label,opt,label,type) {
	if (type=="category") {
		var width=396;
	} else {
var width=161;
		}
	if ($('view_attr_upd_'+type+'_'+opt) != null) {
	delete_view(opt,type);
	}
	
	var new_opt="<tr id='view_attr_upd_"+type+"_"+opt+"'><td width='"+width+"px'>"+opt_label+"</td><td width='94px'>"+label+"</td><td width='*%'><button onclick=\"delete_view("+opt+",'"+type+"')\" class='scalable delete' type='button' ><span>Remove View Label</span></button></td></tr>";
	if (type=="category") {
	var options=$('views_labels').innerHTML;
	$('views_labels').innerHTML=options+new_opt;
	JSONobj.arr_views[opt]=new Object;
	JSONobj.arr_views[opt].catid=opt;
	JSONobj.arr_views[opt].view_label=label;
	JSONobj.arr_views[opt].type=type;
	$('att_category_view').value="";
	} else {
	var options=$('views_labels_tag').innerHTML;
	$('views_labels_tag').innerHTML=options+new_opt;
	JSONobj.arr_views_tag[opt]=new Object;
	JSONobj.arr_views_tag[opt].tagid=opt;
	JSONobj.arr_views_tag[opt].view_label=label;
	JSONobj.arr_views_tag[opt].type=type;
	$('att_tag_view').value="";
	}			
	$('attribute_set_views_id').value=JSON.stringify(JSONobj);
	
}
</script>

<div class="entity-edit">
<div class="entry-edit-head">
<h4 class="icon-head head-edit-form fieldset-legend"><?php echo Mage::helper('catalog')->__('Manage Titles on Categories') ?></h4>
</div>
<div class="box">
<div class="hor-scroll">
<table class="dynamic-grid" cellspacing="0" id="attribute-labels-table">
	<tr>

		<th>Category</th>
		<th>View label</th>
		<th>Action</th>
	</tr>
	<tr>
		<td><select id="category_view_select">
		<option value="0" >Product Page</option>
                     <?php 
                     $categories=Mage::getModel('catalog/category')->getCollection()
                     ->addAttributeToSelect('*')
                     ->addIsActiveFilter();
                     foreach ($categories as $cat) {
                     	  if ($cat->getId()>0) {                   
                     ?>
  <option value="<?php echo $cat->getId(); ?>"><?php echo $cat->getName(); ?></option>
  <?php } } ?>
</select></td>

		<td><input id="att_category_view" class="input-text" type="text"
			name="frontend_category[]" value="" /></td>
		<td>
		<button style=""
			onclick="add_view($('category_view_select').options[$('category_view_select').selectedIndex].text,$('category_view_select').options[$('category_view_select').selectedIndex].value,$('att_category_view').value,'category')"
			class="scalable add" type="button" id="add_new_view_button"><span>Add
		View Label</span></button>
		</td>
	</tr>

</table>
<input id="attribute_set_views_id" type="hidden"
	name="attribute_set_views" value="" />
<table id="views_labels" class="dynamic-grid" cellspacing="0">
<?php
 $attribute_cat_views=$this->getAttributeObject()->getAttributeSetViews();
 $cat_views_obj=json_decode(json_decode($attribute_cat_views)->arr_views);
 
 foreach ($cat_views_obj as $arr) {
 	$cat=Mage::getModel('catalog/category')->load($arr->catid);
?>
<script>
add_view("<?php echo $cat->getName(); ?>","<?php echo $arr->catid; ?>","<?php echo $arr->view_label; ?>","category");
</script>
<?php
 }
?>
</table>
</div>
</div>
</div>

<br />
<!--  Tags-->

<div class="entity-edit">
<div class="entry-edit-head">
<h4 class="icon-head head-edit-form fieldset-legend"><?php echo Mage::helper('catalog')->__('Manage Titles on Tags') ?></h4>
</div>
<div class="box">
<div class="hor-scroll">
<table class="dynamic-grid" cellspacing="0" id="attribute-labels-table">
	<tr>

		<th>Tag</th>
		<th>View label</th>
		<th>Action</th>
	</tr>
	<tr>
		<td><select id="tag_view_select">
                     <?php 
                     $tags=Mage::getModel('tag/tag')->getCollection();                   
                     foreach ($tags as $tag) {
                     	                     
                     ?>
  <option value="<?php echo $tag->getId(); ?>"><?php echo $tag->getName(); ?></option>
  <?php } ?>
</select></td>

		<td><input id="att_tag_view" class="input-text" type="text"
			name="frontend_tag[]" value="" /></td>
		<td>
		<button style=""
			onclick="add_view($('tag_view_select').options[$('tag_view_select').selectedIndex].text,$('tag_view_select').options[$('tag_view_select').selectedIndex].value,$('att_tag_view').value,'tag')"
			class="scalable add" type="button" id="add_new_view_button"><span>Add
		View Label</span></button>
		</td>
	</tr>

</table>

<table id="views_labels_tag" class="dynamic-grid" cellspacing="0">
<?php
 $attribute_tag_views=$this->getAttributeObject()->getAttributeSetViews();
 $tag_views_obj=json_decode(json_decode($attribute_tag_views)->arr_views_tag);

 foreach ($tag_views_obj as $tag_arr) {
 	$tag_model=Mage::getModel('tag/tag')->load($tag_arr->tagid);
?>
<script>
add_view("<?php echo $tag_model->getName(); ?>","<?php echo $tag_arr->tagid; ?>","<?php echo $tag_arr->view_label; ?>","tag");
</script>
<?php
 }
  
?>
</table>
</div>
</div>
</div>

<br />

<!-- end of attibute views -->

<div class="entity-edit" id="matage-options-panel">
<div class="entry-edit-head">
<h4 class="icon-head head-edit-form fieldset-legend"><?php echo Mage::helper('catalog')->__('Manage Options (values of your attribute)') ?></h4>
</div>
<div class="box">
<div class="hor-scroll">
<table class="dynamic-grid" cellspacing="0" cellpadding="0">
	<tr id="attribute-options-table">
                    <?php foreach ($this->getStores() as $_store): ?>
                        <th><?php echo $_store->getName() ?></th>
                    <?php endforeach; ?>
                        <th><?php echo Mage::helper('catalog')->__('Position') ?></th>
		<th class="nobr a-center"><?php echo Mage::helper('catalog')->__('Is Default') ?></th>
		<th>
                            <?php if (!$this->getReadOnly()):?>
                                <?php echo $this->getAddNewButtonHtml() ?>
                            <?php endif;?>
                        </th>
	</tr>
	<tr class="no-display template" id="row-template">
                        <?php foreach ($this->getStores() as $_store): ?>
                        <td><input
			name="option[value][{{id}}][<?php echo $_store->getId() ?>]"
			value="{{store<?php echo $_store->getId() ?>}}"
			class="input-text<?php if($_store->getId()==0): ?> required-option<?php endif; ?>"
			type="text" <?php if ($this->getReadOnly()):?> disabled="disabled"
			<?php endif;?> /></td>
                        <?php endforeach; ?>
                        <td class="a-center"><input class="input-text"
			type="text" name="option[order][{{id}}]" value="{{sort_order}}"
			<?php if ($this->getReadOnly()):?> disabled="disabled" <?php endif;?> /></td>
		<td><input class="input-radio" type="radio" name="default[]"
			value="{{id}}" <?php if ($this->getReadOnly()):?> disabled="disabled"
			<?php endif;?> /></td>
		<td class="a-left"><input type="hidden" class="delete-flag"
			name="option[delete][{{id}}]" value="" />
                            <?php if (!$this->getReadOnly()):?>
                                <?php echo $this->getDeleteButtonHtml() ?>
                            <?php endif;?>
                        </td>
	</tr>
</table>
</div>
<input type="hidden" id="option-count-check" value="" /></div>
</div>
<script type="text/javascript">
//<![CDATA[
var optionDefaultInputType = 'radio';

// IE removes quotes from element.innerHTML whenever it thinks they're not needed, which breaks html.
var templateText =
        '<tr class="option-row">'+
<?php foreach ($this->getStores() as $_store): ?>
            '<td><input name="option[value][{{id}}][<?php echo $_store->getId() ?>]" value="{{store<?php echo $_store->getId() ?>}}" class="input-text<?php if($_store->getId()==0): ?> required-option<?php endif; ?>" type="text" <?php if ($this->getReadOnly()):?> disabled="disabled"<?php endif;?>/><\/td>'+
<?php endforeach; ?>
            '<td><input class="input-text" type="text" name="option[order][{{id}}]" value="{{sort_order}}" <?php if ($this->getReadOnly()):?> disabled="disabled"<?php endif;?>/><\/td>'+
            '<td class="a-center"><input class="input-radio" type="{{intype}}" name="default[]" value="{{id}}" {{checked}} <?php if ($this->getReadOnly()):?> disabled="disabled"<?php endif;?>/><\/td>'+
            '<td class="a-left">'+
                '<input type="hidden" class="delete-flag" name="option[delete][{{id}}]" value="" />'+
                <?php if (!$this->getReadOnly()):?>
                    '<?php echo $this->getDeleteButtonHtml() ?>'+
                <?php endif;?>
            '<\/td>'+
        '<\/tr>';

var attributeOption = {
    table : $('attribute-options-table'),
    templateSyntax : /(^|.|\r|\n)({{(\w+)}})/,
    templateText : templateText,
    itemCount : 0,
    totalItems : 0,
    add : function(data) {
        this.template = new Template(this.templateText, this.templateSyntax);
        if(!data.id){
            data = {};
            data.id  = 'option_'+this.itemCount;
        }
        if (!data.intype)
            data.intype = optionDefaultInputType;

        Element.insert(this.table, {after: this.template.evaluate(data)});
        this.bindRemoveButtons();
        this.itemCount++;
        this.totalItems++;
        this.updateItemsCountField();
    },
    remove : function(event){
        var element = $(Event.findElement(event, 'tr')); // !!! Button already
                                                               // have table parent in safari
        // Safari workaround
        element.ancestors().each(function(parentItem){
           if (parentItem.hasClassName('option-row')) {
               element = parentItem;
               throw $break;
           } else if (parentItem.hasClassName('box')) {
               throw $break;
           }
        });


        if(element){
            var elementFlags = element.getElementsByClassName('delete-flag');
            if(elementFlags[0]){
                elementFlags[0].value=1;
            }

            element.addClassName('no-display');
            element.addClassName('template');
            element.hide();
            this.totalItems--;
            this.updateItemsCountField();
        }
    },
    updateItemsCountField: function() {
        if (this.totalItems > 0) {
            $('option-count-check').value = '1';
        } else {
            $('option-count-check').value = '';
        }
    },
    bindRemoveButtons : function(){
        var buttons = $$('.delete-option');
        for(var i=0;i<buttons.length;i++){
            if(!$(buttons[i]).binded){
                $(buttons[i]).binded = true;
                Event.observe(buttons[i], 'click', this.remove.bind(this));
            }
        }
    }

}
if($('row-template')){
    $('row-template').remove();
}
attributeOption.bindRemoveButtons();

if($('add_new_option_button')){
    Event.observe('add_new_option_button', 'click', attributeOption.add.bind(attributeOption));
}
Validation.addAllThese([
    ['required-option', '<?php echo Mage::helper('catalog')->__('Failed') ?>', function(v) {
        return !Validation.get('IsEmpty').test(v);
}]]);
Validation.addAllThese([
    ['required-options-count', '<?php echo Mage::helper('catalog')->__('Options is required') ?>', function(v) {
        return !Validation.get('IsEmpty').test(v);
}]]);
<?php foreach ($this->getOptionValues() as $_value): ?>
    attributeOption.add(<?php echo $_value->toJson() ?>);
<?php endforeach; ?>
//]]>
</script>
